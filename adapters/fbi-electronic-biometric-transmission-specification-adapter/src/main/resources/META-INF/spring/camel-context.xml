<?xml version="1.0" encoding="UTF-8"?>
<!--

    Unless explicitly acquired and licensed from Licensor under another license, the contents of
    this file are subject to the Reciprocal Public License ("RPL") Version 1.5, or subsequent
    versions as allowed by the RPL, and You may not copy or use this file in either source code
    or executable form, except in compliance with the terms and conditions of the RPL

    All software distributed under the RPL is provided strictly on an "AS IS" basis, WITHOUT
    WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND LICENSOR HEREBY DISCLAIMS ALL SUCH
    WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the RPL for specific language
    governing rights and limitations under the RPL.

    http://opensource.org/licenses/RPL-1.5

    Copyright 2012-2015 Open Justice Broker Consortium

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:cxf="http://camel.apache.org/schema/cxf"
	xmlns:ctx="http://www.springframework.org/schema/context" 
	xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- needed cxf imports -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />	
	<import resource="properties-context.xml"/>
	<import resource="cxf-endpoints.xml"/>	
	
	<camel:camelContext xmlns="http://camel.apache.org/schema/spring" id="fbi-electronic-biometric-transmission-specification-adapter">
	
		<!-- 
			#########################################################################################
					File system Directories		
			#########################################################################################
		-->
			<!-- alternative endpoint for testing: file system message input directory -->
			<endpoint id="inputMessageDirEndpoint" 
				uri="file://{{fbiEbtsAdapter.messageDirectory}}/input?idempotent=true&amp;moveFailed={{fbiEbtsAdapter.messageDirectory}}/error&amp;move={{fbiEbtsAdapter.messageDirectory}}/processed/" />			

			<!-- Our directory to store synchronous FBI responses with 'control number' information -->
			<endpoint id="ngiControlNumberSynchResponseDir" uri="file://{{fbiEbtsAdapter.messageDirectory}}/output/NGI_ControlNum_SynchResponse"/>

			<!-- Our directory to store FBI asynchronous Subscription Acknowledgement responses -->
			<endpoint id="ngiSubAcknowledgeAsynchResponseDir" uri="file://{{fbiEbtsAdapter.messageDirectory}}/output/NGI_SubAcknowledge_AsynchResponse"/>

		<!-- 
			#########################################################################################
					Web Service Endpoints
			#########################################################################################		
		 -->

		<!-- called by s/n intermediary -->
		<endpoint id="fbiEbtsWebServiceInputEndpoint"
			uri="cxf:bean:fbiEbtsService?dataFormat=PAYLOAD&amp;loggingFeatureEnabled=${fbiEbtsAdapter.cxflogging}" />
							
		<!-- hosted at FBI, receives our subscription requests -->		
		<endpoint id="ngiUserServiceRequestEndpoint" 
			uri="cxf:bean:ngiUserService?dataFormat=PAYLOAD&amp;loggingFeatureEnabled=${fbiEbtsAdapter.cxflogging}" />
		
		<!-- Endpoint we expose to FBI so they can send us asynchronous Subscription Acknowledgement responses --> 
		<endpoint id="ngiSubAckResponseServiceEndpoint" 
			uri="cxf:bean:ngiResponseService?dataFormat=PAYLOAD&amp;loggingFeatureEnabled=${fbiEbtsAdapter.cxflogging}" />
		
		<!-- 
			#########################################################################################
					Routes
			#########################################################################################		
		 -->
		
		<!--  for testing by dropping message into adapter input directory -->
		<camel:route id="fbiEbtsInputFileDropRoute">
		
			<camel:from uri="inputMessageDirEndpoint"/>
			
			<camel:log message="\n\n FBI EBTS Adapter received File-Drop inbound message: \n\n ${body} \n\n" />
		
			<camel:to uri="direct:processFbiEbtsSubscription"/>
		
			<!-- Save the fbi synchronous response(control number) to a file -->
			<camel:setHeader headerName="CamelFileName">
				<camel:simple>NGI_ControlNum_Resp_${date:now:yyyyMMdd}_${date:now:HHmmss}.xml</camel:simple>
			</camel:setHeader>
			
			<camel:log message="\n\n Saving ControlNumber response to disk...\n\n"/>
			
			<camel:to uri="ngiControlNumberSynchResponseDir"/>
		</camel:route>


		<!-- Called by ojb s/n intermediary -->
		<camel:route id="fbiEbtsInputWebServiceRoute">
	
			<camel:from uri="fbiEbtsWebServiceInputEndpoint" />
			
			<camel:log message="\n\n Fbi Adapter service received inbound message: \n\n ${body} \n\n" />
		
			<camel:to uri="direct:processFbiEbtsSubscription" />
		</camel:route>
		

		<camel:route id="fbiEbtsProcessingRoute">
		
			<camel:from uri="direct:processFbiEbtsSubscription"/>
			
			<camel:log message="\n\n Processing ojb subscription...\n\n" />
						
			<camel:to uri="direct:transformToFbiNgiSubscription" />
			
			<camel:log message="\n\n Calling FBI NGI service...\n\n"/>			

			<camel:setHeader headerName="operationNameSpace">
				<constant>http://ws.cjis.gov/2014/08/01/ngi/service</constant>
			</camel:setHeader>

			<camel:setHeader headerName="operationName">
				<constant>submitRequest</constant>
			</camel:setHeader>

			<camel:to uri="ngiUserServiceRequestEndpoint"/>
			
			<camel:log message="\n\n Received FBI NGI ControlNumber synchronous response: \n ${body} \n\n"/>
									
		</camel:route>
		
		
		<!-- Receives Subscription Acknowledgments from FBI NGI, saves them to disk 
			and sends back a synchronous VOID response message to FBI -->
		<camel:route id="ngiSubAckResponseRoute">
		
			<camel:from uri="ngiSubAckResponseServiceEndpoint"/>
			
			<camel:log message="\n\n Received NGI Sub. Ack. response: \n ${body} \n\n"/>						
			
			<camel:setHeader headerName="CamelFileName">
				<camel:simple>NgiResponse_SubAck_${date:now:yyyyMMdd}_${date:now:HHmmss}.xml</camel:simple>
			</camel:setHeader>
						
			<camel:log message="\n\n Saving Sub. Ack. response to disk... \n\n"/>
			
			<camel:to uri="ngiSubAcknowledgeAsynchResponseDir"/>	
			
			<camel:log message="\n\n Sending synchronous VOID response to FBI...\n ${body} \n\n"/>
				
			<camel:to uri="bean:ngiResponseProcessor?method=sendVoidResponse"/>							
				
		</camel:route>
		
		
		<camel:route id="ojbSubscriptionToFbiNgiSubscriptionRoute">
						
			<camel:from uri="direct:transformToFbiNgiSubscription" />
			
			<camel:log message="\n\n Transforming ojb subscription to FBI NGI subscription format...\n\n"/>
			
			<setHeader headerName="rapBackTransactionDate"><simple>{{fbiEbtsAdapter.rapBackTransactionDate}}</simple></setHeader>
			<setHeader headerName="rapBackNotificatonFormat"><simple>{{fbiEbtsAdapter.rapBackNotificatonFormat}}</simple></setHeader>
			<setHeader headerName="recordRapBackCategoryCode"><simple>{{fbiEbtsAdapter.recordRapBackCategoryCode}}</simple></setHeader>			
			<setHeader headerName="rapBackInStateOptOutIndicator"><simple>{{fbiEbtsAdapter.rapBackInStateOptOutIndicator}}</simple></setHeader>			
			<setHeader headerName="rapBackTriggeringEvent"><simple>{{fbiEbtsAdapter.rapBackTriggeringEvent}}</simple></setHeader>
			<setHeader headerName="destinationOrganizationORI"><simple>{{fbiEbtsAdapter.destinationOrganizationORI}}</simple></setHeader>
			<setHeader headerName="originatorOrganizationORI"><simple>{{fbiEbtsAdapter.originatorOrganizationORI}}</simple></setHeader>
			<setHeader headerName="controlID"><simple>{{fbiEbtsAdapter.controlID}}</simple></setHeader>
			<setHeader headerName="domainVersion"><simple>{{fbiEbtsAdapter.domainVersion}}</simple></setHeader>
			<setHeader headerName="domainName"><simple>{{fbiEbtsAdapter.domainName}}</simple></setHeader>
			<setHeader headerName="transactionMajorVersion"><simple>{{fbiEbtsAdapter.transactionMajorVersion}}</simple></setHeader>
			<setHeader headerName="transactionMinorVersion"><simple>{{fbiEbtsAdapter.transactionMinorVersion}}</simple></setHeader>
			<setHeader headerName="rapSheetRequestIndicator"><simple>{{fbiEbtsAdapter.rapSheetRequestIndicator}}</simple></setHeader>
			<setHeader headerName="rapBackRecipient"><simple>{{fbiEbtsAdapter.rapBackRecipient}}</simple></setHeader>
			<setHeader headerName="controllingAgencyID"><simple>{{fbiEbtsAdapter.controllingAgencyID}}</simple></setHeader>
			<setHeader headerName="originatingAgencyCaseNumber"><simple>{{fbiEbtsAdapter.originatingAgencyCaseNumber}}</simple></setHeader>
			<setHeader headerName="nativeScanningResolution"><simple>{{fbiEbtsAdapter.nativeScanningResolution}}</simple></setHeader>
			<setHeader headerName="nominalTransmittingResolution"><simple>{{fbiEbtsAdapter.nominalTransmittingResolution}}</simple></setHeader>
			<setHeader headerName="transactionContentSummaryContentFirstRecordCategoryCode"><simple>{{fbiEbtsAdapter.transactionContentSummaryContentFirstRecordCategoryCode}}</simple></setHeader>
			<setHeader headerName="transactionContentSummaryContentRecordCountCriminal"><simple>{{fbiEbtsAdapter.transactionContentSummaryContentRecordCountCriminal}}</simple></setHeader>
			<setHeader headerName="transactionContentSummaryContentRecordCountCivil"><simple>{{fbiEbtsAdapter.transactionContentSummaryContentRecordCountCivil}}</simple></setHeader>
			<setHeader headerName="imageReferenceID"><simple>{{fbiEbtsAdapter.imageReferenceID}}</simple></setHeader>
						
			<camel:to uri="xslt:xsl/ojbSubscriptionToEBTS.xsl" />
			
			<camel:log message="\n\n Transformed ojb subscription to FBI EBTS NGI format: \n\n ${body} \n\n" />		
		</camel:route>				

	</camel:camelContext>
	
	<bean id="ngiResponseProcessor" class="org.ojbc.bundles.adapters.fbi.ebts.processor.NgiResponseProcessor"/>

</beans>
