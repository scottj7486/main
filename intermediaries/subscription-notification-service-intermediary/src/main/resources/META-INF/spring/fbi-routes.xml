<?xml version="1.0" encoding="UTF-8"?>
<!--

    Unless explicitly acquired and licensed from Licensor under another license, the contents of
    this file are subject to the Reciprocal Public License ("RPL") Version 1.5, or subsequent
    versions as allowed by the RPL, and You may not copy or use this file in either source code
    or executable form, except in compliance with the terms and conditions of the RPL

    All software distributed under the RPL is provided strictly on an "AS IS" basis, WITHOUT
    WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND LICENSOR HEREBY DISCLAIMS ALL SUCH
    WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the RPL for specific language
    governing rights and limitations under the RPL.

    http://opensource.org/licenses/RPL-1.5

    Copyright 2012-2017 Open Justice Broker Consortium

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:cxf="http://camel.apache.org/schema/cxf"
	xmlns:ctx="http://www.springframework.org/schema/context" 
	xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
		
	<routeContext id="fbiRoutes" xmlns="http://camel.apache.org/schema/spring">		

		<route id="processPotentialFbiSubscription_Route">
		
			<from uri="direct:processPotentialFbiSubscription"/>
		
				<camel:choice>
					<camel:when>
						<camel:xpath>boolean(//wsnb2:Subscribe/submsg-doc:SubscriptionMessage/submsg-ext:Subject/j:PersonAugmentation/j:PersonFBIIdentification/nc20:IdentificationID/text()[1])</camel:xpath>					
						
						<camel:log message="\n\n\n\n Found FBI ID in message, processing... \n\n\n\n"/>
						
						<camel:to uri="bean:fbiSubscriptionProcessor?method=processSubscription"/>
																																				
						<camel:choice>
							<camel:when>
								<camel:simple>${header.sendSubToFbiEbtsAdapter} == true</camel:simple>
								
								<log message ="\n\n\n sendSubToFbiEbtsAdapter} == true ...\n\n\n"/>
																
								<to uri="direct:sendToCorrectEbtsEndpoint" />
																																
							</camel:when>
							
							<camel:otherwise>
								<log message="\n\n\n Not sending to fbi ebts adapter! \n\n\n" loggingLevel="WARN" />
							</camel:otherwise>
						</camel:choice>																			
						
					</camel:when>													
					<camel:otherwise>	
																									
						<camel:setHeader headerName="sid">
							<camel:xpath>//wsnb2:Subscribe/submsg-doc:SubscriptionMessage/submsg-ext:Subject/j:PersonAugmentation/j:PersonStateFingerprintIdentification/nc20:IdentificationID/text()</camel:xpath>
						</camel:setHeader>					
						
						<!-- rapback logger must be defined in karaf/etc/org.ops4j.pax.logging.cfg  Allows rare important message to go to file where 
							it's easy to notice, but requires manual monitoring.  The src/test/resources/log4j.properties properties in this project has 
							sample configuration for setting up the file logger -->
						<camel:log message="\n\n\n\n There is no FBI ID available for SID:  ${header.sid}.  Not sending subscription to FBI.\n\n\n\n" logName="rapback"/>						
					</camel:otherwise>							
				</camel:choice>			
		
		</route>
		
		
				
		<route id="sendToCorrectEbtsEndpoint_Route">
		
			<from uri="direct:sendToCorrectEbtsEndpoint"/>
		
			<camel:choice>
					<when>
						<simple>${header.operationName} == 'Subscribe'</simple>
								
						<log message="\n\n\n operationName == 'Subscribe \n\n\n"/>
														
						<camel:to uri="direct:callFbiEbtsSubscriptionService"/>	
					</when>
					<camel:when>
						<simple>${header.operationName} == 'Modify'</simple>
						
						<log message="\n\n\n operationName == 'Modify' \n\n\n" />
															
						<to uri="direct:callFbiEbtsModify" />
					</camel:when>
					<otherwise>
						<log message="\n\n\n Fbi Operation not set. Not sending to ebts adapter! \n\n\n" loggingLevel="WARN" />
					</otherwise>								
			</camel:choice>
										
		</route>
						
		
		<camel:route id="fbiEbtsSubscriptionSecureRoute">					
			
			<camel:from uri="direct:callFbiEbtsSubscriptionService" />
			
			<camel:log message="Calling fbi ebts service..."/>			
						
			<camel:setHeader headerName="operationName"><constant>Subscribe</constant></camel:setHeader>	
			<camel:setHeader headerName="operationNamespace"><constant>http://docs.oasis-open.org/wsn/brw-2</constant></camel:setHeader>										
			
			<camel:to uri="fbiEbtsSubscriptionRequestServiceEndpoint" />	
			
		</camel:route>
		
		
		<route id="callFbiEbtsModify_Route">
		
			<from uri="direct:callFbiEbtsModify" />
		
			<log message="\n\n\n direct:callFbiEbtsModifyService... \n\n\n" />
		
			<setHeader headerName="operationName"><constant>Modify</constant></setHeader>			
			<setHeader headerName="operationNamespace"><constant>http://docs.oasis-open.org/wsn/bw-2</constant></setHeader>
		
			<to uri="fbiEbtsSubscriptionManagerEndpoint" />
		</route>
		
		<camel:route id="processFbiUnsubscribeRoute">
		
			<from uri="direct:processFbiUnsubscription"/>								
			
			<log message="\n\n\n direct:processFbiUnsubscription... \n\n\n" loggingLevel="INFO" />	
			
			<setHeader headerName="shouldDeleteFbiSubscription">			
				<simple>bean:fbiSubscriptionProcessor?method=shouldDeleteFbiSubscription</simple>			
			</setHeader>	
			
			<log message="\n\n\n shouldDeleteFbiSubscription = ${header.shouldDeleteFbiSubscription} \n\n\n" loggingLevel="INFO"/>
			
			<camel:choice>
				<camel:when>
					<simple>${header.shouldDeleteFbiSubscription}</simple>
					
					<camel:log message="\n\n\n No more state subscriptions, so - Calling fbi ebts service to unsubscribe from FBI... \n\n\n"/>
																				
					<to uri="bean:fbiSubscriptionProcessor?method=prepareUnsubscribeMessageForFbiEbts"/>
						
					<convertBodyTo type="java.lang.String"/>
									
					<camel:to uri="fbiEbtsSubscriptionManagerEndpoint" />														
				
				</camel:when>	
				
				<camel:otherwise>			
				
					<log message="\n\n\n NOT DeleteFbiSubscription! (possible State Subscriptions remaining) \n\n\n" loggingLevel="WARN"/>		
							
					<to uri="bean:fbiSubscriptionProcessor?method=determineStateSubsEndDateLessThanFbiSubEndDate"/>
					
					<choice>
						<when>
							<simple>${header.stateSubsEndDateLessThanFbiSubEndDate}</simple>
							
							<log message="\n\n\n stateSubsEndDateLessThanFbiSubEndDate - so preparing maintenance subscription \n\n\n" />
																																
							<to uri="bean:fbiSubscriptionProcessor?method=prepareSubscriptionModificationFromUnsubscribe"/>
																											
							<to uri="fbiEbtsSubscriptionManagerEndpoint"/>
						</when>	
						
						<camel:otherwise>
							<log message="\n\n\n !stateSubsEndDateLessThanFbiSubEndDate \n\n\n" />
						</camel:otherwise>				
					</choice>
																				
				</camel:otherwise>			
			</camel:choice>			
			
		</camel:route>		
	</routeContext>
		
</beans>

