#*
 * Unless explicitly acquired and licensed from Licensor under another license, the contents of
 * this file are subject to the Reciprocal Public License ("RPL") Version 1.5, or subsequent
 * versions as allowed by the RPL, and You may not copy or use this file in either source code
 * or executable form, except in compliance with the terms and conditions of the RPL
 *
 * All software distributed under the RPL is provided strictly on an "AS IS" basis, WITHOUT
 * WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND LICENSOR HEREBY DISCLAIMS ALL SUCH
 * WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the RPL for specific language
 * governing rights and limitations under the RPL.
 *
 * http://opensource.org/licenses/RPL-1.5
 *
 * Copyright 2012-2015 Open Justice Broker Consortium
 *#
<script type="text/javascript">
  $(function() {	
	$('#triggeringEventsDiv input:nth-of-type(1)').prop('checked', true).attr("onclick", "return false");	  
	$('#triggeringEventsDiv input:nth-of-type(4)').before('<br>');	  
  		    	  
	$('#idLookupLink').click(
		function(){    	
    		var sidPattern = new RegExp('$sidRegexForAddSubscription');
		  	var sidVal = $('#stateId').val();
		  	
		  	if (sidPattern.test(sidVal)){	
		  					  					  					  	    					    						 
				var requestUrl = '../subscriptions/sidLookup?identificationID=' + sidVal;												    						 
				    	
				// calls a spring mvc method returning a json string w/format key,value
				// where the key is an int index as a string - and the value is an object {first, last}
				// TODO - see if traditional java collection ie Map can be passed from spring mvc layer 
				// to js layer here instead of using json			    						     
			    $.get(requestUrl, function(data){		  			  			
  						//console.log(data);
  						//generate html drop-down options based on json values from java layer
  						var nameHtml = '<option value="">Name</option>';
  						if( data && Object.keys(data.allNames).length > 0){
							$.each(data.allNames, function( index, value ) {
								if(index == 0){
									// requirements give us the official name 1st
									nameHtml += '<option value="' + value + '" selected>' + value + '</option>';
								}else{
									// display a (A) signifying alternate name
									nameHtml += '<option value="' + value + '">' + value + ' (A) </option>';
								}																														
							});	  							  						
							
							$("#fbiIdDiv").html('FBI ID: ' + data.formattedFbiId);
							
							if (data.dobStrings && Object.keys(data.dobStrings).length > 0){
							
								var dateOfBirthDropdownHtml = $("#dateOfBirth").html();
								
								$.each(data.dobStrings, function( index, value ) {
									if(index == 0){
										dateOfBirthDropdownHtml += '<option value="' + value + '" selected>' + value + '</option>';
									}else{
										// display a (A) signifying alternate DOB
										dateOfBirthDropdownHtml += '<option value="' + value + '">' + value + ' (A) </option>';
									}																														
								});	
								
								$('#dateOfBirth').html(dateOfBirthDropdownHtml)  							  						
							}
																		  						
  						}else{
  							alert('Unable to process requested SID');
  						}
  						
						//TODO fix this to ensure it happens.  Full names have a middle initial whereas 
						// alternate names do not.  Either the controller or js should ensure the names 
						// can be compared for equality	  								  								  						
		 																			 							 											  	
  						$('#fullName').html(nameHtml);	  							  										  													  							  					  						  				  				
		  			}
	  			).fail(ojbc.displayFailMessage);
  			}else{
  				alert('$sidRegexValidationErrorMessage');
  			}		  				     			       				
	});    		
    		    	      		    	  			    		    	  
    		    	
	// note hacked beforeShow property is a function to return false (ignores clicks and prevents 
	// displaying DatePicker - due to DatePicker limitation that doesn't honor readonly property.  DatePicker
	// allows being disabled but that prevents the html field value from being sent to the server when the form 
	// is serialized	    	   		    			
    $(".disabledDatePicker").datepicker({
       showOn: "both",
       buttonImage: "#springUrl('/static/images/Search Form/icon-calendar.png')",    	  
       buttonImageOnly: true,
       beforeShow: function(i) {  return false; } 
    });	
    	        	        	   
    $(".enabledDatePicker").datepicker({
       showOn: "both",
       buttonImage: "#springUrl('/static/images/Search Form/icon-calendar.png')",
       buttonImageOnly: true,
    });	        	        	     	      	    
    	        
    $("#subscriptionForm").on("change", "#subscriptionPurpose", function(){
    	if ($("#subscriptionPurpose").val()==="CI"){
    		$("#subscriptionEndDate").val('$vmDateTool.format("MM/dd/yyyy", $csDefaultEndDate)');
    	}
    	else if ($("#subscriptionPurpose").val()==="CS"){
    		$("#subscriptionEndDate").val('$vmDateTool.format("MM/dd/yyyy", $csDefaultEndDate)');
    	}
    });    	        	    			       			       				    	  
  });
	  	  
</script>

<div id="triggeringEventsDiv" style="padding-left:12px;">
	<label>Triggering Event:</label>
	#springFormCheckboxes("subscription.federalTriggeringEventCode" $triggeringEventCodeMap "" "style='width: auto;'")
</div>
<div> 
	<span class="subscriptionHint">ORI: $userLogonInfo.employerOri</span> 
</div>				
				
#if($showSubscriptionPurposeDropDown)
	<div>
		#springFormSingleSelect("subscription.subscriptionPurpose" $subscriptionPurposeValueToLabelMap)		
	</div>
#end	
			
<div>
	#springFormInput("subscription.stateId" "style='width:140px;' placeholder='SID Number'")
	<a id="idLookupLink" class="grayButton" href="#"><span id="idLookupImg"></span></a>
	
	<span id="fbiIdDiv" class="subscriptionHint"/>
</div>			

<div>	
	<!-- note since not linked with a spring pojo, this value will be appended to the url of the http request 
	 	when the subscription is saved -->
	#springBind("subscription.fullName")
	<select id="${status.expression}" name="${status.expression}" value="$!status.value">
		<option value="">Name</option>
	</select> 
	#springBind("subscription.dateOfBirth")
	<select id="${status.expression}" name="${status.expression}" value="$!status.value">
		<option value="">DOB</option>
	</select> 
</div>

<div style="padding-left:12px;">
	<label>Start Date:</label>

	#if( ${isStartDateEditable} )
		#springFormInput("subscription.subscriptionStartDate" "style='width:110px' class='enabledDatePicker' placeholder='From'")
	#else
		#springFormInput("subscription.subscriptionStartDate" "style='width:110px' class='disabledDatePicker' placeholder='From' readonly='readonly' ")				
	#end					

	<label>End Date:</label>

	#if( ${isEndDateEditable} )
		#springFormInput("subscription.subscriptionEndDate" "style='width:110px' class='enabledDatePicker' placeholder='End Date'")
	#else
		#springFormInput("subscription.subscriptionEndDate" "style='width:110px' class='disabledDatePicker' placeholder='End Date' readonly='readonly' ")
	#end	
</div>

<div>
	<!-- fix object being mapped to from list to something else or use regular html instead of velocity spring macro -->
	#springFormInput("subscription.emailList[0]" "placeholder='Email Address 1'")
</div>

<div>
	#springFormInput("subscription.emailList[1]" "placeholder='Email Address 2'")
</div>

<div>
	#springFormInput("subscription.emailList[2]" "placeholder='Email Address 3'")
</div>

#if($showCaseIdInput)
	<div>
		#springFormInput("subscription.caseId" "placeholder='Case Id' maxlength='20'" )
	</div>
#end