<?xml version="1.0" encoding="UTF-8"?>
<!--

    Unless explicitly acquired and licensed from Licensor under another license, the contents of
    this file are subject to the Reciprocal Public License ("RPL") Version 1.5, or subsequent
    versions as allowed by the RPL, and You may not copy or use this file in either source code
    or executable form, except in compliance with the terms and conditions of the RPL

    All software distributed under the RPL is provided strictly on an "AS IS" basis, WITHOUT
    WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND LICENSOR HEREBY DISCLAIMS ALL SUCH
    WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the RPL for specific language
    governing rights and limitations under the RPL.

    http://opensource.org/licenses/RPL-1.5

    Copyright 2012-2015 Open Justice Broker Consortium

-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:cxf="http://camel.apache.org/schema/cxf"
    xmlns:policy="http://cxf.apache.org/policy"
    xmlns:wsp="http://www.w3.org/2006/07/ws-policy"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration"
    xmlns:sec="http://cxf.apache.org/configuration/security"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xsi:schemaLocation="
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
    http://cxf.apache.org/policy http://cxf.apache.org/schemas/policy.xsd
    http://www.w3.org/2006/07/ws-policy http://www.w3.org/2006/07/ws-policy.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
    http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
    http://cxf.apache.org/transports/http-jetty/configuration http://cxf.apache.org/schemas/configuration/http-jetty.xsd
    http://cxf.apache.org/configuration/security	http://cxf.apache.org/schemas/configuration/security.xsd
    http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
    ">
    
     <cxf:cxfEndpoint 
        id="fbiEbtsService"
        address="${fbiEbtsAdapter.secureEndpoint}" 
		wsdlURL="classpath:service-specifications/Subscription_Notification_Service/WSDL/OJBWSNotification.wsdl"
		serviceName="ojb-nb:NotificationBrokerServiceService" 
		endpointName="ojb-nb:NotificationBrokerService"
		xmlns:ojb-nb="http://www.ojbc.org/SubscribeNotify/NotificationBroker">
    </cxf:cxfEndpoint>   
        
    <cxf:cxfEndpoint
    	id="ngiUserService"
    	address="${fbiEbtsAdapter.ngiUserServiceEndpoint}"
    	wsdlURL="classpath:ebts-10.0-ws-specification/Inc4_External_Service_Contracts_v1.1/external/wsdl/ngi/user-services/NGIUserService.wsdl"
    	serviceName="ngi:NGIUserService"
    	endpointName="ngi:NGIUserServicePort"
    	xmlns:ngi="http://ws.cjis.gov/2014/08/01/ngi/service">
    </cxf:cxfEndpoint> 
    
    <cxf:cxfEndpoint
    	id="ngiResponseService"
    	address="${fbiEbtsAdapter.ngiUserServiceResponseEndpoint}"
    	wsdlURL="classpath:ebts-10.0-ws-specification/Inc4_External_Service_Contracts_v1.1/external/wsdl/ngi/user-services/NGIResponseService.wsdl"
    	serviceName="ngi:NGIResponseService"
    	endpointName="ngi:NGIResponsePort"
    	xmlns:ngi="http://ws.cjis.gov/2014/08/01/ngi/services/risc">
    </cxf:cxfEndpoint>      
    
	<!-- 
		Used for OUTBOUND SSL/TLS Connection. No CCA, just SSL. Client side SSL connection 
	-->
	<http:conduit
		name="https://.*">
		<http:tlsClientParameters disableCNCheck="true">
			<sec:trustManagers>
				<sec:keyStore type="JKS"
					password="${fbiEbtsAdapter.truststorePassword}"
					file="${fbiEbtsAdapter.truststoreLocation}" />
			</sec:trustManagers>
			<sec:cipherSuitesFilter>
					<!-- these filters ensure that a strong ciphersuite will be used --> 
				    <sec:include>TLS_DHE_RSA_WITH_AES_128_CBC_SHA</sec:include>
				    <sec:include>SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA</sec:include>
				    <sec:include>TLS_RSA_WITH_AES_128_CBC_SHA</sec:include>
				    <sec:include>SSL_RSA_WITH_3DES_EDE_CBC_SHA</sec:include>
			</sec:cipherSuitesFilter>
		</http:tlsClientParameters>
		<http:client AutoRedirect="true" Connection="Keep-Alive" />
	</http:conduit>       
    
    <!-- NOTE assuming osgi container(karaf) handles providing server side ssl for hosted services -->
</beans>

